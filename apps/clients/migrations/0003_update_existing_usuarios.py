# Generated by Django 5.0 on 2025-07-17 20:46

from django.db import migrations


def update_existing_usuarios(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    Cliente = apps.get_model('clients', 'Cliente')
    
    # For each existing Cliente without a user, try to find a matching user by email
    for cliente in Cliente.objects.filter(usuario__isnull=True):
        try:
            user = User.objects.get(email=cliente.email)
            cliente.usuario = user
            cliente.save()
        except User.DoesNotExist:
            # If no matching user found, skip this cliente
            pass

def create_clientes_for_users(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    Cliente = apps.get_model('clients', 'Cliente')
    
    # For each user without a cliente, create one
    for user in User.objects.filter(cliente__isnull=True):
        # Create a basic Cliente with minimal required fields
        Cliente.objects.create(
            usuario=user,
            tipo_identificacion='C',  # Default to CÃ©dula
            identificacion=user.username,  # Use username as identificacion if no better option
            nombres=user.first_name or '',
            apellidos=user.last_name or '',
            email=user.email or ''
        )

def reverse_update(apps, schema_editor):
    # No need to do anything when unapplying the migration
    pass

def reverse_create_clientes(apps, schema_editor):
    # No need to do anything when unapplying the migration
    # We don't want to delete clientes as they might have related data
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0002_cliente_usuario'),
    ]

    operations = [
        migrations.RunPython(update_existing_usuarios, reverse_update),
        migrations.RunPython(create_clientes_for_users, reverse_create_clientes),
    ]
